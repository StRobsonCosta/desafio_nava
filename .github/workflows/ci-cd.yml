name: CI/CD Pipeline

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:13-alpine
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: 1234
          POSTGRES_DB: nava_log
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
      mongodb:
        image: mongo:5.0
        ports:
          - 27017:27017
        options: >-
          --health-cmd "echo 'db.runCommand(\"ping\").ok' | mongosh localhost:27017/test --quiet"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Check out code
        uses: actions/checkout@v4
        
      - name: Set Locale to pt-BR
        run: sudo update-locale LANG=pt_BR.UTF-8  

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: temurin

      - name: Cache Maven dependencies
        uses: actions/cache@v4
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-

      - name: Build and test with Maven
        run: mvn clean package jacoco:report --fail-at-end

      - name: Verify JAR generation
        run: |
          echo "Listing files in target directory:"
          ls -l target
          JAR_FILE=$(ls target/*.jar 2>/dev/null)
          if [ -z "$JAR_FILE" ]; then
            echo "JAR file not found!" && exit 1
          fi

      - name: Upload JaCoCo report
        uses: actions/upload-artifact@v4
        with:
          name: jacoco-report
          path: target/site/jacoco

      - name: Upload JAR as artifact
        uses: actions/upload-artifact@v4
        with:
          name: nava-log-jar
          path: target/nava-log*.jar

  docker:
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Download JAR from artifact
        uses: actions/download-artifact@v4
        with:
          name: nava-log-jar
          path: target

      - name: List files in project root
        run: ls -R .

      - name: Build Docker Image
        run: docker build -t nava-log-app .

      - name: Push Docker Image to Docker Hub
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
          DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
        run: |
          echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
          docker tag nava-log-app:latest ${{ secrets.DOCKER_USERNAME }}/nava-log-app:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/nava-log-app:latest
          
          
